// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Document {
  id         String      @id @default(cuid())
  title      String
  createdAt  DateTime    @default(now())
  experience String
  fullText   String
  questions  Question[]
  Flashcard  Flashcard[]
  deleted    Boolean     @default(false)
}

model Question {
  id         String   @id @default(cuid())
  title      String
  createdAt  DateTime @default(now())
  documentId String
  difficulty Int
  document   Document @relation(fields: [documentId], references: [id])
  options    Option[]
  Answer     Answer[]
}

model Option {
  id         String   @id @default(cuid())
  text       String
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  correct    Boolean
  Answer     Answer[]
}

model Answer {
  id         String   @id @default(cuid())
  questionId String
  optionId   String
  question   Question @relation(fields: [questionId], references: [id])
  option     Option   @relation(fields: [optionId], references: [id])
  ignored    Boolean  @default(false)
  correct    Boolean
}

model Flashcard {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  question   String
  answer     String
  difficulty Int
  documentId String
  document   Document @relation(fields: [documentId], references: [id])
}
